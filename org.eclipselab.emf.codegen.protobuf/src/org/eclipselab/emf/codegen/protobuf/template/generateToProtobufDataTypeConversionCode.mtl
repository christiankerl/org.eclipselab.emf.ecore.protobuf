[comment encoding = UTF-8 /]
[module generateToProtobufDataTypeConversionCode('http://www.eclipse.org/emf/2002/Ecore', 'http://www.eclipse.org/emf/2002/GenModel')]

[import org::eclipselab::emf::codegen::protobuf::template::common]

[comment EAttribute of type EChar /]
[template public generateToProtobufDataTypeConversion(eAttribute : EAttribute, p : GenPackage, resultValueExpr : String, placeholder : String, sourceValueExpr : String) ? (Sequence{'EChar', 'ECharacterObject'}->includes(eType.name))]
[resultValueExpr.substitute(placeholder, sourceValueExpr) /]
[/template]

[comment EAttribute of type EByte /]
[template public generateToProtobufDataTypeConversion(eAttribute : EAttribute, p : GenPackage, resultValueExpr : String, placeholder : String, sourceValueExpr : String) ? (Sequence{'EByte', 'EByteObject'}->includes(eType.name))]
[resultValueExpr.substitute(placeholder, sourceValueExpr) /]
[/template]

[comment EAttribute of type EShort /]
[template public generateToProtobufDataTypeConversion(eAttribute : EAttribute, p : GenPackage, resultValueExpr : String, placeholder : String, sourceValueExpr : String) ? (Sequence{'EShort', 'EShortObject'}->includes(eType.name))]
[resultValueExpr.substitute(placeholder, sourceValueExpr) /]
[/template]

[comment EAttribute of type EByteArray/]
[template public generateToProtobufDataTypeConversion(eAttribute : EAttribute, p : GenPackage, resultValueExpr : String, placeholder : String, sourceValueExpr : String) ? (eType.name = 'EByteArray')]
[resultValueExpr.substitute(placeholder, 'com.google.protobuf.ByteString.copyFrom(' + sourceValueExpr + ')') /]
[/template]

[comment EAttribute of type EDate/]
[template public generateToProtobufDataTypeConversion(eAttribute : EAttribute, p : GenPackage, resultValueExpr : String, placeholder : String, sourceValueExpr : String) ? (eType.name = 'EDate')]
[resultValueExpr.substitute(placeholder, sourceValueExpr + '.getTime()') /]
[/template]

[comment EAttribute of type EEnum/]
[template public generateToProtobufDataTypeConversion(eAttribute : EAttribute, p : GenPackage, resultValueExpr : String, placeholder : String, sourceValueExpr : String) ? (eType.oclIsKindOf(EEnum))]
switch([sourceValueExpr /])
{
  [let eEnum : EEnum = eAttribute.eType.oclAsType(EEnum)]
  [for (eEnum.eLiterals)]
  case [name /]:
    [resultValueExpr.substitute(placeholder, eEnum.pbName(p) + '.' + name )/];
    break;
  [/for]
  [/let]
}
[/template]

[comment EAttribute of any type /]
[template public generateToProtobufDataTypeConversion(eAttribute : EAttribute, p : GenPackage, resultValueExpr : String, placeholder : String, sourceValueExpr : String)]
[resultValueExpr.substitute(placeholder, 'org.eclipse.emf.ecore.util.EcoreUtil.convertToString(' + eType.literal(p) + ', ' + sourceValueExpr + ')') /]
[/template]